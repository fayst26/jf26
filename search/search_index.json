{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Dates and times","text":"<p>Expressing dates and times in a clear and unambiguous way helps support writing for a global audience and reduces confusion.</p>"},{"location":"#express-times","title":"Express times","text":"<p>In general, use the following guidelines to format expressions of time:</p> <ul> <li>Use the 12-hour clock, except if required to use a 24-hour time, such as when documenting features that use 24-hour time. If the UI, a command, or a code sample uses the 24-hour format, use that format throughout the page for consistency.</li> <li>Use exact times when possible, but noon and midnight are OK.</li> <li>Use hyphens in time ranges. Don't add spaces before or after the hyphens.</li> </ul> <p> Recommended: 5-10 minutes ago.</p> <ul> <li>Capitalize AM and PM, and leave one space between it and the time.</li> </ul> <p> Recommended: 3:45 PM.</p> <ul> <li>Remove the minutes from round hours.</li> </ul> <p> Recommended: 3 PM.</p>"},{"location":"#express-time-zones","title":"Express time zones","text":"<p>Avoid using time zones unless absolutely necessary. In cases where you need to use a time zone\u2014such as describing real events at real times\u2014use the following guidelines:</p> <ul> <li>Let the reader know if the time is local to their time\u2014for example, 10 AM your local time.</li> <li>If a time zone is necessary, use the timestamp format as seen in the user interface (if available).</li> <li>If using a specific time zone, spell out the region and include the UTC or GMT label as a parenthetical. For example:</li> <li>US and Canadian Pacific Standard Time (UTC-8)</li> <li>US and Canadian Pacific Daylight Time (UTC-7)</li> <li>Don't abbreviate the name of the time zone.</li> <li>In the rare event where the time of an event doesn't change for daylight saving time, use the specific time zone, without reference to UTC.</li> </ul>"},{"location":"#express-dates","title":"Express dates","text":"<p>In general, spell out the names of months and days of the week in full. Give the full four-digit year, not a two-digit abbreviation.</p> <p> Recommended: January 19, 2017</p> <p>If including the day of the week, add it before the month as follows: DAY_OF_WEEK, MONTH DAY, YEAR.</p> <p> Recommended: Tuesday, April 27, 2021</p>"},{"location":"#partial-dates-and-abbreviations","title":"Partial dates and abbreviations","text":"<p>When giving only the month and year, don't use a comma.</p> <p> Recommended: She was hired in January 2017.</p> <p>In most cases, don't abbreviate the day of the week or the month. However, when conserving space, such as in a heading or table, it's okay to abbreviate the month and the day of the week to their three-letter abbreviations. Capitalize the first letter and do not add a period at the end of the abbreviation.</p> <p>If you abbreviate, do so for the entire date. Don't mix written-out forms with abbreviated forms in the same date.</p> <p>Be consistent in where you apply abbreviations throughout your documentation. For example, if you choose to abbreviate in table cells, do so in all table cells.</p> <p> Recommended: Mon, Sep 3, 2018</p> <p> Not recommended: Mon, September 3, 2018</p>"},{"location":"#express-divisions-of-the-year","title":"Express divisions of the year","text":"<p>Avoid referring to seasons. Spring in the northern hemisphere is fall (autumn) in the southern hemisphere. Instead, use the month, quarter, or temperature (if relevant).</p> Recommended Not recommended During warmer months, data centers face a higher risk of cooling failures. During summer months, data centers face a higher risk of cooling failures. In November and December, data centers experience higher traffic volume. In winter, data centers experience higher traffic volume. Changes are released in October of each year. Changes are released in the Fall of each year."},{"location":"docker_overview/","title":"What is Docker?","text":"<p>Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker's methodologies for shipping, testing, and deploying code, you can significantly reduce the delay between writing code and running it in production.</p>"},{"location":"docker_overview/#the-docker-platform","title":"The Docker platform","text":"<p>Docker provides the ability to package and run an application in a loosely isolated environment called a container. The isolation and security lets you run many containers simultaneously on a given host. Containers are lightweight and contain everything needed to run the application, so you don't need to rely on what's installed on the host. You can share containers while you work, and be sure that everyone you share with gets the same container that works in the same way.</p> <p>Docker provides tooling and a platform to manage the lifecycle of your containers:</p> <ul> <li>Develop your application and its supporting components using containers.</li> <li>The container becomes the unit for distributing and testing your application.</li> <li>When you're ready, deploy your application into your production environment, as a container or an orchestrated service. This works the same whether your production environment is a local data center, a cloud provider, or a hybrid of the two.</li> </ul>"},{"location":"docker_overview/#what-can-i-use-docker-for","title":"What can I use Docker for?","text":""},{"location":"docker_overview/#fast-consistent-delivery-of-your-applications","title":"Fast, consistent delivery of your applications","text":"<p>Docker streamlines the development lifecycle by allowing developers to work in standardized environments using local containers which provide your applications and services. Containers are great for continuous integration and continuous delivery (CI/CD) workflows.</p> <p>Consider the following example scenario:</p> <ul> <li>Your developers write code locally and share their work with their colleagues using Docker containers.</li> <li>They use Docker to push their applications into a test environment and run automated and manual tests.</li> <li>When developers find bugs, they can fix them in the development environment and redeploy them to the test environment for testing and validation.</li> <li>When testing is complete, getting the fix to the customer is as simple as pushing the updated image to the production environment.</li> </ul>"},{"location":"docker_overview/#responsive-deployment-and-scaling","title":"Responsive deployment and scaling","text":"<p>Docker's container-based platform allows for highly portable workloads. Docker containers can run on a developer's local laptop, on physical or virtual machines in a data center, on cloud providers, or in a mixture of environments.</p> <p>Docker's portability and lightweight nature also make it easy to dynamically manage workloads, scaling up or tearing down applications and services as business needs dictate, in near real time.</p>"},{"location":"docker_overview/#running-more-workloads-on-the-same-hardware","title":"Running more workloads on the same hardware","text":"<p>Docker is lightweight and fast. It provides a viable, cost-effective alternative to hypervisor-based virtual machines, so you can use more of your server capacity to achieve your business goals. Docker is perfect for high density environments and for small and medium deployments where you need to do more with fewer resources.</p>"},{"location":"index%20-%20Copy/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"index%20-%20Copy/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"index%20-%20Copy/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"intro/","title":"Introduction","text":"<p>Embark on a comprehensive learning path to understand Docker and containerization, beginning with foundational concepts and installation procedures. Progress through hands-on exercises that cover essential Docker commands, image creation, and container orchestration.</p>"},{"location":"intro/#about-this-series","title":"About this series","text":"<p>In this guide series, you will gain hands-on experience with Docker, starting with installing and setting up Docker Desktop on your local machine. You will learn how to run your first container, understanding the basics of containerization and its benefits. This series guides you through building your first Docker image, providing insights into creating efficient and reusable images. Finally, you will explore how to publish your image on Docker Hub, enabling you to share your work with the broader community and leverage Docker's powerful ecosystem for collaborative development and deployment.</p>"},{"location":"intro/#what-youll-learn","title":"What you'll learn","text":"<ul> <li>Set up Docker Desktop</li> <li>Run your first container</li> <li>Build your first image</li> <li>Publish your image on Docker Hub</li> </ul>"},{"location":"intro/build_and_push/","title":"Build and push the image","text":"<p>Now that you have a repository, you are ready to build and push your image. An important note is that the image you are building extends the Node image, meaning you don't need to install or configure Node, yarn, etc. You can simply focus on what makes your application unique.</p> <p>What is an image/Dockerfile?</p> <p>Without going too deep yet, think of a container image as a single package that contains everything needed to run a process. ? In this case, it will contain a Node environment, the backend code, and the compiled React code.</p> <p>Any machine that runs a container using the image, will then be able to run the application as it was built without needing anything else pre-installed on the machine.</p> <p>A <code>Dockerfile</code> is a text-based script that provides the instruction set on how to build the image. For this quick start, the repository already contains the Dockerfile.</p> CLIVS Code <ol> <li> <p>To get started, either clone or download the project as a ZIP file to your local machine.</p> <pre><code>git clone https://github.com/docker/getting-started-todo-app\n</code></pre> <p>And after the project is cloned, navigate into the new directory created by the clone:</p> <pre><code>cd getting-started-todo-app\n</code></pre> </li> <li> <p>Build the project by running the following command, swapping out <code>DOCKER_USERNAME</code> with your username.</p> <pre><code>docker build -t DOCKER_USERNAME/getting-started-todo-app .\n</code></pre> <p>For example, if your Docker username was mobydock, you would run the following:</p> <pre><code>docker build -t mobydock/getting-started-todo-app .\n</code></pre> </li> <li> <p>To verify the image exists locally, you can use the <code>docker image ls</code> command:</p> <pre><code>docker image ls\n</code></pre> <p>You will see output similar to the following:</p> <pre><code>REPOSITORY                          TAG       IMAGE ID       CREATED          SIZE\nmobydock/getting-started-todo-app   latest    1543656c9290   2 minutes ago    1.12GB\n...\n</code></pre> </li> <li> <p>To push the image, use the <code>docker push</code> command. Be sure to replace <code>DOCKER_USERNAME</code> with your username:</p> <pre><code>docker push DOCKER_USERNAME/getting-started-todo-app\n</code></pre> <p>Depending on your upload speeds, this may take a moment to push.</p> </li> </ol> <ol> <li> <p>Open Visual Studio Code. Ensure you have the Docker extension for VS Code installed from Extension Marketplace.</p> <p></p> </li> <li> <p>In the File menu, select Open Folder. Choose Clone Git Repository and paste this URL:  https://github.com/docker/getting-started-todo-app</p> <p></p> </li> <li> <p>Right-click the <code>Dockerfile</code> and select the Build Image... menu item.</p> <p></p> </li> </ol>"},{"location":"intro/develop_with_containers/","title":"Explanation","text":"<p>Now that you have Docker Desktop installed, you are ready to do some application development. Specifically, you will do the following:</p> <ol> <li>Clone and start a development project</li> <li>Make changes to the backend and frontend</li> <li>See the changes immediately</li> </ol>"},{"location":"intro/get_docker_desktop/","title":"Docker desktop","text":"Explanation <p>Docker Desktop is the all-in-one package to build images, run containers, and so much more. This guide will walk you through the installation process, enabling you to experience Docker Desktop firsthand.</p>"},{"location":"intro/get_docker_desktop/#manage-containers-using-docker-desktop","title":"Manage containers using Docker Desktop","text":"<ol> <li>Open Docker Desktop and select the Containers field on the left sidebar.</li> <li> <p>Select the Inspect field to obtain detailed information about the container. You can perform various actions such as pause, resume, start or stop containers, or explore the Logs, Bind mounts, Exec, Files, and Stats tabs.  </p> </li> <li> <p>Select the Inspect field to obtain detailed information about the c ontainer. You can perform various actions such as pause, resume, start or stop containers, or explore the Logs, Bind mounts, Exec, Files, and Stats tabs.   </p> </li> <li> <p>Open the client/src/components/AddNewItemForm.jsx file. This provides the component to add a new item to the to-do list.</p> </li> <li> <p>Modify the placeholder attribute of the Form.Control element to whatever you'd like to display.</p> <pre><code>type=\"text\"\n</code></pre> </li> <li> <p>Save the file and go back to your browser. You should see the change already hot-reloaded into your browser. If you don't like it, feel free to tweak it until it looks just right.</p> </li> </ol>"}]}